// Elements
const lowStimToggle = document.getElementById('low-stim-toggle');
const loadChallengesBtn = document.getElementById('load-challenges');
const challengeList = document.getElementById('challenge-list');
const reflectionInput = document.getElementById('reflection-input');
const saveReflectionBtn = document.getElementById('save-reflection');
const reflectionList = document.getElementById('reflection-list');

// === Low-Stimulation Mode ===
if (localStorage.getItem('low-stim') === 'true') {
  document.body.classList.add('low-stim');
}

lowStimToggle.addEventListener('click', () => {
  document.body.classList.toggle('low-stim');
  localStorage.setItem('low-stim', document.body.classList.contains('low-stim'));
});

// === Challenges Data ===
const challenges = {
  party: [
    "Compliment someone’s outfit 👗",
    "Find a quiet spot and take 3 deep breaths 🌬️",
    "Say hi to one new person 👋",
    "Notice 3 things you like about the environment 🌈"
  ],
  church: [
    "Smile at someone nearby 🙏",
    "Share one nice word after service 💬",
    "Sit next to someone new 🪑",
    "Thank someone for coming 💙"
  ],
  workshop: [
    "Ask one question to the speaker ✋",
    "Take a short walk during the break 🚶‍♀️",
    "Write one takeaway in your notebook 📝",
    "Share a thought with a partner 🤝"
  ],
  networking: [
    "Introduce yourself to 2 people 💼",
    "Ask about someone’s interests 👂",
    "Find one thing in common 🌍",
    "Take a break if you feel overstimulated 🕊️"
  ]
};

// === Load Challenges ===
loadChallengesBtn.addEventListener('click', () => {
  const type = document.getElementById('event-type').value;
  challengeList.innerHTML = "";
  if (challenges[type]) {
    challenges[type].forEach(ch => {
      const li = document.createElement('li');
      li.textContent = ch;
      challengeList.appendChild(li);
    });
  }
});

// === Reflection Notes ===
function loadReflections() {
  const saved = JSON.parse(localStorage.getItem('reflections') || '[]');
  reflectionList.innerHTML = "";
  saved.forEach(note => {
    const li = document.createElement('li');
    li.textContent = note;
    reflectionList.appendChild(li);
  });
}

saveReflectionBtn.addEventListener('click', () => {
  const text = reflectionInput.value.trim();
  if (!text) return;
  const saved = JSON.parse(localStorage.getItem('reflections') || '[]');
  saved.push(text);
  localStorage.setItem('reflections', JSON.stringify(saved));
  reflectionInput.value = "";
  loadReflections();
});

loadReflections();
